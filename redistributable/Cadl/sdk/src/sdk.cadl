namespace Morphir.SDK;

// Basic Types
namespace Basics {
  scalar bool extends boolean;

  scalar int extends int64;

  scalar float extends float64;
}

namespace String {
  scalar String extends string;
}

namespace Char {
  @maxLength(1)
  @minLength(1)
  scalar char extends string;
}


// Advance Types
namespace Decimal {
  scalar decimal extends numeric;
}

namespace LocalDate {
  scalar localDate extends plainDate;
}

namespace LocalTime {
  scalar localTime extends plainTime;
}

namespace Month {
  scalar month extends string;
}


// Optional Types
namespace Maybe {
  alias Maybe<T> = T | null;
}


// Collection Types
namespace List{
  alias list<T> = Array<T>;
}

namespace Set{
  alias set<T> = Array<T>;
}

namespace Dict{
  alias dict<K,V> = Array<[K,V]>;
}


// Composite Types
namespace Tuple{
  alias tuple<A,B> = [A,B];
}

namespace Result{
  alias result<E,V> = ["Err", E] | ["Ok", V];
}